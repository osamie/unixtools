 ===================
 ||   	PONG	  ||
 ===================



Author:	Osazuwa Omigie
	 Date:	31-March-2014
     Contains:	Design details for CSCI E-28 homework 4 submission.
====================================================================

=======
PURPOSE
=======
Techniques for multi-tasking are utilized in this one-person ping-pong game. Using signal and timer management, various events are operations are handled simultaneously during the game. The object of the game is to keep the ball in play as long as possible.


=========
INTERFACE
=========
Pong is started on the commandline and does not require any arguments on startup. 
	The player moves the paddle up and down the screen, one row at a time, by pressing the 'k' and 'm' keys, respectively. Each press of the key moves the paddle one row.  


==============
DATA STRUCTURE
============== 
Some game components such as the paddle, pong ball and the game clock timer were modelled as "objects" of their own. The objects consists of structs and associated functions that let you perform operations on the structs.
For example, the paddle object consists of a struct ppppadle which holds the position-related properties of the paddle. The struct members are pad_top ( the top row of the paddle),pad_bot (the botom row of the paddle), pad_col (the paddle's column) and pad_char (the symbol been drawn on the screen for the paddle). 
The clock timer 


Two datastructures are used here: 



pppaddle and ppball. The pppaddle is a struct which represents the paddle object object. It stores two position or coordinates. One position stores the current 	
	


=========
ALGORITHM
=========
		


=============
PROGRAM FLOW
=============
	

====
NOTE
====
